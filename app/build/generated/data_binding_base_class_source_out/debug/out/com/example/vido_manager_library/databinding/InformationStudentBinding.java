// Generated by view binder compiler. Do not edit!
package com.example.vido_manager_library.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.vido_manager_library.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InformationStudentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout inforView;

  @NonNull
  public final TextView tvAddress;

  @NonNull
  public final TextView tvBirthday;

  @NonNull
  public final TextView tvClass;

  @NonNull
  public final TextView tvCoursera;

  @NonNull
  public final TextView tvMajors;

  @NonNull
  public final TextView tvMssv;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvPhone;

  private InformationStudentBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout inforView, @NonNull TextView tvAddress,
      @NonNull TextView tvBirthday, @NonNull TextView tvClass, @NonNull TextView tvCoursera,
      @NonNull TextView tvMajors, @NonNull TextView tvMssv, @NonNull TextView tvName,
      @NonNull TextView tvPhone) {
    this.rootView = rootView;
    this.inforView = inforView;
    this.tvAddress = tvAddress;
    this.tvBirthday = tvBirthday;
    this.tvClass = tvClass;
    this.tvCoursera = tvCoursera;
    this.tvMajors = tvMajors;
    this.tvMssv = tvMssv;
    this.tvName = tvName;
    this.tvPhone = tvPhone;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InformationStudentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InformationStudentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.information_student, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InformationStudentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout inforView = (ConstraintLayout) rootView;

      id = R.id.tv_address;
      TextView tvAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvAddress == null) {
        break missingId;
      }

      id = R.id.tv_birthday;
      TextView tvBirthday = ViewBindings.findChildViewById(rootView, id);
      if (tvBirthday == null) {
        break missingId;
      }

      id = R.id.tv_class;
      TextView tvClass = ViewBindings.findChildViewById(rootView, id);
      if (tvClass == null) {
        break missingId;
      }

      id = R.id.tv_coursera;
      TextView tvCoursera = ViewBindings.findChildViewById(rootView, id);
      if (tvCoursera == null) {
        break missingId;
      }

      id = R.id.tv_majors;
      TextView tvMajors = ViewBindings.findChildViewById(rootView, id);
      if (tvMajors == null) {
        break missingId;
      }

      id = R.id.tv_mssv;
      TextView tvMssv = ViewBindings.findChildViewById(rootView, id);
      if (tvMssv == null) {
        break missingId;
      }

      id = R.id.tv_name;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tv_phone;
      TextView tvPhone = ViewBindings.findChildViewById(rootView, id);
      if (tvPhone == null) {
        break missingId;
      }

      return new InformationStudentBinding((ConstraintLayout) rootView, inforView, tvAddress,
          tvBirthday, tvClass, tvCoursera, tvMajors, tvMssv, tvName, tvPhone);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
