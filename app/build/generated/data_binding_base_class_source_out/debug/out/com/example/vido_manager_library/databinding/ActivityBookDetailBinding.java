// Generated by view binder compiler. Do not edit!
package com.example.vido_manager_library.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.vido_manager_library.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBookDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView back;

  @NonNull
  public final ImageView imgBook;

  @NonNull
  public final TextView nameAuthor;

  @NonNull
  public final TextView nameBook;

  private ActivityBookDetailBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView back,
      @NonNull ImageView imgBook, @NonNull TextView nameAuthor, @NonNull TextView nameBook) {
    this.rootView = rootView;
    this.back = back;
    this.imgBook = imgBook;
    this.nameAuthor = nameAuthor;
    this.nameBook = nameBook;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBookDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBookDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_book_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBookDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.img_book;
      ImageView imgBook = ViewBindings.findChildViewById(rootView, id);
      if (imgBook == null) {
        break missingId;
      }

      id = R.id.nameAuthor;
      TextView nameAuthor = ViewBindings.findChildViewById(rootView, id);
      if (nameAuthor == null) {
        break missingId;
      }

      id = R.id.nameBook;
      TextView nameBook = ViewBindings.findChildViewById(rootView, id);
      if (nameBook == null) {
        break missingId;
      }

      return new ActivityBookDetailBinding((ConstraintLayout) rootView, back, imgBook, nameAuthor,
          nameBook);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
