// Generated by view binder compiler. Do not edit!
package com.example.vido_manager_library.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.vido_manager_library.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView LGMssv;

  @NonNull
  public final TextView LGUsername;

  @NonNull
  public final TextView btnSignup;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final TextView logOutBtn;

  @NonNull
  public final TextView myInfo;

  private ActivityUserDetailBinding(@NonNull ConstraintLayout rootView, @NonNull TextView LGMssv,
      @NonNull TextView LGUsername, @NonNull TextView btnSignup, @NonNull ImageView imageView2,
      @NonNull ImageView imageView3, @NonNull TextView logOutBtn, @NonNull TextView myInfo) {
    this.rootView = rootView;
    this.LGMssv = LGMssv;
    this.LGUsername = LGUsername;
    this.btnSignup = btnSignup;
    this.imageView2 = imageView2;
    this.imageView3 = imageView3;
    this.logOutBtn = logOutBtn;
    this.myInfo = myInfo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.LG_mssv;
      TextView LGMssv = ViewBindings.findChildViewById(rootView, id);
      if (LGMssv == null) {
        break missingId;
      }

      id = R.id.LG_Username;
      TextView LGUsername = ViewBindings.findChildViewById(rootView, id);
      if (LGUsername == null) {
        break missingId;
      }

      id = R.id.btn_signup;
      TextView btnSignup = ViewBindings.findChildViewById(rootView, id);
      if (btnSignup == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.log_out_btn;
      TextView logOutBtn = ViewBindings.findChildViewById(rootView, id);
      if (logOutBtn == null) {
        break missingId;
      }

      id = R.id.my_info;
      TextView myInfo = ViewBindings.findChildViewById(rootView, id);
      if (myInfo == null) {
        break missingId;
      }

      return new ActivityUserDetailBinding((ConstraintLayout) rootView, LGMssv, LGUsername,
          btnSignup, imageView2, imageView3, logOutBtn, myInfo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
