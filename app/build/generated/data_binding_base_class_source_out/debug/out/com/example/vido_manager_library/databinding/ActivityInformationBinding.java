// Generated by view binder compiler. Do not edit!
package com.example.vido_manager_library.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.vido_manager_library.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityInformationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView inforGetmssv;

  @NonNull
  public final TextView inforGetname;

  @NonNull
  public final TextView inforMssv;

  @NonNull
  public final TextView inforName;

  private ActivityInformationBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView inforGetmssv, @NonNull TextView inforGetname, @NonNull TextView inforMssv,
      @NonNull TextView inforName) {
    this.rootView = rootView;
    this.inforGetmssv = inforGetmssv;
    this.inforGetname = inforGetname;
    this.inforMssv = inforMssv;
    this.inforName = inforName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInformationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInformationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_information, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInformationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.infor_getmssv;
      TextView inforGetmssv = ViewBindings.findChildViewById(rootView, id);
      if (inforGetmssv == null) {
        break missingId;
      }

      id = R.id.infor_getname;
      TextView inforGetname = ViewBindings.findChildViewById(rootView, id);
      if (inforGetname == null) {
        break missingId;
      }

      id = R.id.infor_mssv;
      TextView inforMssv = ViewBindings.findChildViewById(rootView, id);
      if (inforMssv == null) {
        break missingId;
      }

      id = R.id.infor_name;
      TextView inforName = ViewBindings.findChildViewById(rootView, id);
      if (inforName == null) {
        break missingId;
      }

      return new ActivityInformationBinding((ConstraintLayout) rootView, inforGetmssv, inforGetname,
          inforMssv, inforName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
